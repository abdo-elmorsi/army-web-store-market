generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  username  String   @unique
  password  String
  role      String   @default("store")
  img       String?
  phone     String?
  createdAt DateTime @default(now()) @db.Date
  updatedAt DateTime @updatedAt @db.Date

  // Relations
  createdProducts     Product[]     @relation("CreatedProducts")
  updatedProducts     Product[]     @relation("UpdatedProducts")
  createdTransactions Transaction[] @relation("CreatedTransactions") // Clarified relation name
  updatedTransactions Transaction[] @relation("UpdatedTransactions") // Updated relation for lastUpdatedBy
}

model Product {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  name             String   @unique
  description      String?
  category         Category @relation(fields: [categoryId], references: [id])
  categoryId       String   @db.ObjectId
  unit             Unit     @relation(fields: [unitId], references: [id])
  unitId           String   @db.ObjectId
  quantityInMarket Int
  quantityInStock  Int
  quantityInStore  Int
  price            Float // New price field
  createdBy        User     @relation("CreatedProducts", fields: [createdById], references: [id])
  createdById      String   @db.ObjectId
  lastUpdatedBy    User     @relation("UpdatedProducts", fields: [lastUpdatedById], references: [id])
  lastUpdatedById  String   @db.ObjectId
  createdAt        DateTime @default(now()) @db.Date
  updatedAt        DateTime @updatedAt @db.Date

  // Relations
  transactions Transaction[]
}

model Transaction {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  quantity        Int
  type            String
  description     String?
  createdBy       User     @relation("CreatedTransactions", fields: [createdById], references: [id]) // Updated relation name
  createdById     String   @db.ObjectId
  product         Product  @relation(fields: [productId], references: [id])
  productId       String   @db.ObjectId
  lastUpdatedBy   User     @relation("UpdatedTransactions", fields: [lastUpdatedById], references: [id]) // Updated relation name
  lastUpdatedById String   @db.ObjectId // Keep the field name
  createdAt       DateTime @default(now()) @db.Date
  updatedAt       DateTime @updatedAt @db.Date
}

model Unit {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String   @unique
  createdAt DateTime @default(now()) @db.Date
  updatedAt DateTime @updatedAt @db.Date

  // Relations
  products Product[]
}

model Category {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String   @unique
  createdAt DateTime @default(now()) @db.Date
  updatedAt DateTime @updatedAt @db.Date

  // Relations
  products Product[]
}
